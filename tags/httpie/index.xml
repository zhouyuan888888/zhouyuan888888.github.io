<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>httpie on Just Coding</title>
    <link>https://nkcoder.github.io/tags/httpie/</link>
    <description>Recent content in httpie on Just Coding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Feb 2020 23:26:04 +0800</lastBuildDate><atom:link href="https://nkcoder.github.io/tags/httpie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTPie用法介绍</title>
      <link>https://nkcoder.github.io/posts/httpie-tutorial/</link>
      <pubDate>Wed, 19 Feb 2020 23:26:04 +0800</pubDate>
      
      <guid>https://nkcoder.github.io/posts/httpie-tutorial/</guid>
      <description>HTTPie是基于命令行的 HTTP 客户端，功能与CURL类似，但更简单、易用。
但是如果对用法不熟悉，经常容易混淆，比如查询参数用==还是=，请求体的数据用=还是:=等，这里记录日常开发中的常见用法作为备忘。
以下示例大多来自HTTPie 官方文档，如果有不清楚的地方，请移步参考。
语法 http [flags][method] URL [ITEM [ITEM]] 默认请求方法 如果[METHOD]被忽略，没有请求数据，则默认为GET，如果有请求数据，则默认为POST：
$ http localhost:8080/books $ http localhost:8080/books id:=1 name=&amp;#39;Spring in action&amp;#39; localhost 可忽略 默认协议为 http，所以http://可以忽略，如果 URL 是localhost，也可以忽略，如：
$ http :8080/books HTTP headers 格式为：header-name:header-value
$ http get :8080/books/1 Authorization:my-auth-token 请求数据默认会被序列化为 json，同时，HTTPie 默认设置以下 header：
Content-Type: application/json Accept: application/json, */* URL 请求参数 当然可以将请求参数追加在 URL 后面，但是使用param==value的方式可以不用关心特殊字符的转义：
$ http get :8080/books name==&amp;#34;my book&amp;#34; author==&amp;#34;kate&amp;#34; GET /?name=my+book&amp;amp;author=Kate 请求体数据 字符串类型的数据用=，非字符串类型或 Raw Json 的数据用:=，引用文件数据使用@data-file:
$ http post :8080/books id:=1 name=&amp;#34;Akka in Action&amp;#34; soldOut:=false { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;Akka in Action&amp;#34;, &amp;#34;soldOut&amp;#34;: false } $ http PUT api.</description>
    </item>
    
  </channel>
</rss>
